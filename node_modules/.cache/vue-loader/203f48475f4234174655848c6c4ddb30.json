{"remainingRequest":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/steven/workspace/casting-agency-frontend/src/components/shared/Navbar.vue?vue&type=template&id=1141183a&","dependencies":[{"path":"/home/steven/workspace/casting-agency-frontend/src/components/shared/Navbar.vue","mtime":1654013616390},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1618407608009},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1634219578329},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1618407608009},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1634219578329}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"/home/steven/workspace/casting-agency-frontend/node_modules/babel-loader/lib/index.js!/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/home/steven/workspace/casting-agency-frontend/src/api/HttpClient.js","dependencies":[{"path":"/home/steven/workspace/casting-agency-frontend/src/api/HttpClient.js","mtime":1652106348858},{"path":"/home/steven/workspace/casting-agency-frontend/babel.config.js","mtime":1652640712513},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1618407608009},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/babel-loader/lib/index.js","mtime":1650889791270},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1618407618624}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3N0ZXZlbi93b3Jrc3BhY2UvY2FzdGluZy1hZ2VuY3ktZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBhcGlVcmwsIEh0dHBTdGF0dXMgfSBmcm9tICdAL2NvbnN0JzsKYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQVBJX0JBU0VfVVJMOwpheGlvcy5kZWZhdWx0cy53aXRoQ3JlZGVudGlhbHMgPSB0cnVlOwpheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7CmF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nXSA9ICcqJzsKYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvKgogICAqIElmIHRoZSBkYXRhIGJlaW5nIHNlbnQgaW4gdGhlIHJlcXVlc3QgaXMgZm9ybSBkYXRhLCBsZXQgdGhlIGJyb3dzZXIKICAgKiBhdXRvbWF0aWNhbGx5IHNldCB0aGUgQ29udGVudC1UeXBlIGhlYWRlciB0byBtdWx0aXBhcnQvZm9ybS1kYXRhLAogICAqIG90aGVyd2lzZSBzZW5kIGl0IGFzIGFwcGxpY2F0aW9uL2pzb24gZm9yIGFsbCBvdGhlciByZXF1ZXN0cwogICAqLwogIGlmIChjb25maWcuZGF0YSAmJiBjb25maWcuZGF0YSBpbnN0YW5jZW9mIEZvcm1EYXRhKSB7CiAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSk7CmF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgcmV0dXJuIHJlc3BvbnNlOwp9LCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGVycikgewogICAgdmFyIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpZiAoZXJyLnJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJlc3BvbnNlID0gewogICAgICAgICAgICAgIHN0YXR1c0NvZGU6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsCiAgICAgICAgICAgICAgLy8gVE9ETzogY2hhbmdlIHRoaXMgc3RhdHVzIGNvZGUgdG8gc29tZXRoaW5nIG1vcmUgYXBwcm9wcmlhdGUKICAgICAgICAgICAgICBlcnJvcjogJ0FuIHVua25vd24gZXJyb3Igb2NjdXJyZWQnCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KHJlc3BvbnNlKSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBuZXcgUHJvbWlzZS5yZWplY3QoZXJyKSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwp2YXIgZGVmYXVsdEhlYWRlcnMgPSB7CiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwp9OwpleHBvcnQgdmFyIEh0dHBDbGllbnQgPSB7CiAgcmVxdWVzdDogZnVuY3Rpb24gcmVxdWVzdChtZXRob2QsIHVybCkgewogICAgdmFyIF9hcmd1bWVudHMgPSBhcmd1bWVudHMsCiAgICAgICAgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgYm9keSwgaGVhZGVycywgYXhpb3NDb25maWcsIHJlc3BvbnNlLCBfcmVzcG9uc2U7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGJvZHkgPSBfYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgX2FyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3VtZW50c1syXSA6IG51bGw7CiAgICAgICAgICAgICAgaGVhZGVycyA9IF9hcmd1bWVudHMubGVuZ3RoID4gMyAmJiBfYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzWzNdIDogbnVsbDsKICAgICAgICAgICAgICBtZXRob2QgPSBtZXRob2QudG9Mb3dlckNhc2UoKTsKCiAgICAgICAgICAgICAgaWYgKCF1cmwuc3RhcnRzV2l0aCgnaHR0cHMnKSkgewogICAgICAgICAgICAgICAgdXJsID0gX3RoaXMuYnVpbGRVcmwodXJsKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGF4aW9zQ29uZmlnID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiBtZXRob2QsCiAgICAgICAgICAgICAgICB1cmw6IHVybCwKICAgICAgICAgICAgICAgIGRhdGE6IGJvZHksCiAgICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDU7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgIHJldHVybiBheGlvcyhheGlvc0NvbmZpZyk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTI7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDUpOwogICAgICAgICAgICAgIF9yZXNwb25zZSA9IHsKICAgICAgICAgICAgICAgIHN0YXR1c0NvZGU6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QKICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBpZiAoIV9jb250ZXh0Mi50MC5yZXNwb25zZSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxOTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX3Jlc3BvbnNlLmVycm9yID0gX2NvbnRleHQyLnQwLnJlc3BvbnNlLmRhdGEuZXJyb3I7CgogICAgICAgICAgICAgIGlmICgnZXJyb3JzJyBpbiBfY29udGV4dDIudDAucmVzcG9uc2UuZGF0YSkgewogICAgICAgICAgICAgICAgX3Jlc3BvbnNlLmVycm9ycyA9IF9jb250ZXh0Mi50MC5yZXNwb25zZS5kYXRhLmVycm9yczsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBfcmVzcG9uc2UuZXJyb3IgPSAnQW4gdW5rbndvbiBlcnJvciBvY2N1cnJlZCc7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9yZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbNSwgMTJdXSk7CiAgICB9KSkoKTsKICB9LAoKICAvKioKICAgKiBKb2lucyB0aGUgYmFzZSBBUEkgVVJMIHdpdGggdGhlIHNwZWNpZmllZCBBUEkgZW5kcG9pbnQKICAgKgogICAqIEBwYXJhbSB1cmwgVGhlIFVSTCB0byBhZGQgdGhlIGJhc2UgQVBJIFVSTCB0by4gSWYgdXJsIHN0YXJ0cyB3aXRoIGh0dHBzOi8vLCB1cmwgaXMgcmV0dXJuZWQKICAgKgogICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBiYXNlIEFQSSBVUkwgKyB0aGUgQVBJIGVuZHBvaW50CiAgICovCiAgYnVpbGRVcmw6IGZ1bmN0aW9uIGJ1aWxkVXJsKHVybCkgewogICAgaWYgKHVybC5zdGFydHNXaXRoKCdodHRwczovLycpKSB7CiAgICAgIHJldHVybiB1cmw7CiAgICB9IC8vIFJlbW92ZSBsZWFkaW5nIHNsYXNoCgoKICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnLycpKSB7CiAgICAgIHVybCA9IHVybC5zdWJzdHIoMSwgdXJsLmxlbmd0aCk7CiAgICB9IC8vIFJlbW92ZSB0cmFpbGluZyBzbGFzaAoKCiAgICBpZiAodXJsLmVuZHNXaXRoKCcvJykpIHsKICAgICAgdXJsID0gdXJsLnN1YnN0cigwLCB1cmwubGVuZ3RoIC0gMSk7CiAgICB9CgogICAgcmV0dXJuICIiLmNvbmNhdChhcGlVcmwsICIvIikuY29uY2F0KHVybCk7CiAgfSwKICBnZXQ6IGZ1bmN0aW9uIGdldCh1cmwsIGhlYWRlcnMpIHsKICAgIHJldHVybiB0aGlzLnJlcXVlc3QoJ0dFVCcsIHVybCwgbnVsbCwgaGVhZGVycyB8fCBkZWZhdWx0SGVhZGVycyk7CiAgfSwKICBwb3N0OiBmdW5jdGlvbiBwb3N0KHVybCwgYm9keSwgaGVhZGVycykgewogICAgcmV0dXJuIHRoaXMucmVxdWVzdCgnUE9TVCcsIHVybCwgYm9keSwgaGVhZGVycyB8fCBkZWZhdWx0SGVhZGVycyk7CiAgfSwKICBwdXQ6IGZ1bmN0aW9uIHB1dCh1cmwsIGJvZHksIGhlYWRlcnMpIHsKICAgIHJldHVybiB0aGlzLnJlcXVlc3QoJ1BVVCcsIHVybCwgYm9keSwgaGVhZGVycyB8fCBkZWZhdWx0SGVhZGVycyk7CiAgfSwKICBkZWxldGU6IGZ1bmN0aW9uIF9kZWxldGUodXJsLCBoZWFkZXJzKSB7CiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KCdERUxFVEUnLCB1cmwsIG51bGwsIGhlYWRlcnMgfHwgZGVmYXVsdEhlYWRlcnMpOwogIH0KfTs="},{"version":3,"names":["axios","apiUrl","HttpStatus","defaults","baseURL","process","env","VUE_APP_API_BASE_URL","withCredentials","headers","common","interceptors","request","use","config","data","FormData","response","err","statusCode","BAD_REQUEST","error","Promise","reject","defaultHeaders","HttpClient","method","url","body","toLowerCase","startsWith","buildUrl","axiosConfig","errors","substr","length","endsWith","get","post","put","delete"],"sources":["/home/steven/workspace/casting-agency-frontend/src/api/HttpClient.js"],"sourcesContent":["import axios from 'axios';\n\nimport { apiUrl, HttpStatus } from '@/const';\n\naxios.defaults.baseURL = process.env.VUE_APP_API_BASE_URL;\naxios.defaults.withCredentials = true;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n\naxios.interceptors.request.use(config => {\n  /*\n   * If the data being sent in the request is form data, let the browser\n   * automatically set the Content-Type header to multipart/form-data,\n   * otherwise send it as application/json for all other requests\n   */\n  if (config.data && config.data instanceof FormData) {\n    delete config.headers['Content-Type'];\n  }\n\n  return config;\n});\n\naxios.interceptors.response.use(response => {\n  return response;\n}, async err => {\n  // Handle API call failures due to a problem with the user's internet connection\n  if (!err.response) {\n    const response = {\n      statusCode: HttpStatus.BAD_REQUEST, // TODO: change this status code to something more appropriate\n      error: 'An unknown error occurred'\n    };\n\n    return Promise.reject(response);\n  }\n\n  // Handle API call failures due to an error received from the backend\n  return new Promise.reject(err);\n});\n\nconst defaultHeaders = {\n  'Content-Type': 'application/json'\n};\n\nexport const HttpClient = {\n  async request(method, url, body = null, headers = null) {\n    method = method.toLowerCase();\n\n    if (!url.startsWith('https')) {\n      url = this.buildUrl(url);\n    }\n\n    const axiosConfig = { method, url, data: body, headers };\n\n    try {\n      const response = await axios(axiosConfig);\n\n      return response.data;\n    } catch (err) {\n      const response = { statusCode: HttpStatus.BAD_REQUEST };\n\n      if (err.response) {\n        response.error = err.response.data.error;\n\n        if ('errors' in err.response.data) {\n          response.errors = err.response.data.errors;\n        }\n\n        return response;\n      }\n\n      response.error = 'An unknwon error occurred';\n\n      return response;\n    }\n  },\n  /**\n   * Joins the base API URL with the specified API endpoint\n   *\n   * @param url The URL to add the base API URL to. If url starts with https://, url is returned\n   *\n   * @returns {string} The base API URL + the API endpoint\n   */\n  buildUrl(url) {\n    if (url.startsWith('https://')) {\n      return url;\n    }\n\n    // Remove leading slash\n    if (url.startsWith('/')) {\n      url = url.substr(1, url.length);\n    }\n\n    // Remove trailing slash\n    if (url.endsWith('/')) {\n      url = url.substr(0, url.length - 1);\n    }\n\n    return `${apiUrl}/${url}`;\n  },\n  get(url, headers) {\n    return this.request('GET', url, null, headers || defaultHeaders);\n  },\n  post(url, body, headers) {\n    return this.request('POST', url, body, headers || defaultHeaders);\n  },\n  put(url, body, headers) {\n    return this.request('PUT', url, body, headers || defaultHeaders);\n  },\n  delete(url, headers) {\n    return this.request('DELETE', url, null, headers || defaultHeaders);\n  }\n};\n"],"mappings":"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"}]}
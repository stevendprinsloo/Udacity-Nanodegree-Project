{"remainingRequest":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/steven/workspace/casting-agency-frontend/src/components/actors/ActorList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/steven/workspace/casting-agency-frontend/src/components/actors/ActorList.vue","mtime":1652734037048},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1618407608009},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/babel-loader/lib/index.js","mtime":1650889791270},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1618407608009},{"path":"/home/steven/workspace/casting-agency-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1634219578329}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEFwaVNlcnZpY2UgfSBmcm9tICJAL2FwaSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1vdmllTGlzdCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjdG9yRGF0YTogbnVsbCwKICAgICAgaXNMb2FkaW5nOiB0cnVlLAogICAgICBlcnJvcjogbnVsbCwKICAgICAgc2F2aW5nOiBmYWxzZSwKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkQWN0b3JzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBsb2FkQWN0b3JzKCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQXBpU2VydmljZS5nZXRJbnN0YW5jZSgpLmFjdG9ycygpLmdldEFsbCgxKTsKICAgICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MpIHsKICAgICAgICB0aGlzLmFjdG9yRGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICJGYWlsZWQgdG8gbG9hZCBhY3RvcnMiOwogICAgICB9CiAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["ActorList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ActorList.vue","sourceRoot":"src/components/actors","sourcesContent":["<template>\n  <div class=\"\">\n    <div class=\"d-flex align-items-center py-4 border-bottom\">\n      <h3 class=\"mb-0 me-4\">Actors</h3>\n      <router-link\n        tag=\"button\"\n        :to=\"{ name: 'app_actors_new' }\"\n        class=\"btn btn-primary ms-auto\"\n      >\n        <i class=\"bi bi-plus-circle me-1\"></i>\n        <span>Add Actor</span>\n      </router-link>\n    </div>\n\n    <div class=\"mt-2\">\n      <template v-if=\"isLoading\">\n        <p>Loading...</p>\n      </template>\n      <template v-else-if=\"error\">\n        <p>{{ error }}</p>\n      </template>\n      <template v-else-if=\"!actorData\">\n        There are currently no actors in the system\n      </template>\n      <template v-else>\n        <pre>\n          {{ actorData }}\n        </pre>\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Age</th>\n              <th scope=\"col\">Gender</th>\n              <th scope=\"col\">Movies</th>\n            </tr>\n          </thead>\n          <tbody>\n            <template v-for=\"actor in actorData\">\n              <tr :key=\"actor.id\">\n                <th scope=\"row\"><i class=\"bi bi-person\"></i></th>\n                <td>{{ actor.name }}</td>\n                <td>{{ actor.age }}</td>\n                <td>\n                  <span class=\"badge bg-lighter-grey text-grey\">{{\n                    actor.gender.split(\"\")[0].toUpperCase()\n                  }}</span>\n                </td>\n                <td>{{ actor.movies }}</td>\n              </tr>\n            </template>\n          </tbody>\n        </table>\n      </template>\n    </div>\n  </div>\n</template>\n<script>\nimport { ApiService } from \"@/api\";\n\nexport default {\n  name: \"MovieList\",\n  data() {\n    return {\n      actorData: null,\n      isLoading: true,\n      error: null,\n      saving: false,\n    };\n  },\n  created() {\n    this.loadActors();\n  },\n  methods: {\n    async loadActors() {\n      this.isLoading = true;\n      const response = await ApiService.getInstance().actors().getAll(1);\n      if (response.success) {\n        this.actorData = response.data;\n      } else {\n        this.error = \"Failed to load actors\";\n      }\n      this.isLoading = false;\n    },\n  },\n};\n</script>\n"]}]}